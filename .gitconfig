[alias]
    # add
    a = add
    # checkout
    co = checkout
    # checkout usual branches
    master = checkout master
    staging = checkout staging
    production = checkout production
    # checkout branch, creating it if necessary
    go = checkout -B
    # commit
    c = commit
    # commit all changes
    ca = !git add -A && git commit -av
    # credit an author on the latest commit
    credit = "!f() { git commit --amend --author \"$1 <$2>\" -C HEAD; }; f"
    # diff
    d = diff
    # diff: `git di $number` shows the diff between the state `$number` revisions ago and the current state
    di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"
    # log
    l = log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ci) %C(bold blue)<%an>%Creset'
    # graphical representation for all refs      
    lga = !git l --graph --all
    # graphical representation for branches only         
    lgb = !git l --graph --branches
    # pull
    pl = pull
    # pull including all submodules
    ppl = !"git pull; git submodule foreach git pull origin master"
    # push
    ps = push
    # undo push
    undopush = push -f origin HEAD^:master
    # status
    s = status
    # show verbose output about tags, branches or remotes
    tags = tag -l
    branches = branch -a
    remotes = remote -v
    # Interactive rebase with the given number of latest commits
    reb = "!r() { git rebase -i HEAD~$1; }; r"
    unstage = reset HEAD
    uncommit = reset --soft HEAD^


[apply]
    # detect whitespace errors when applying a patch
    whitespace = warn

[core]
	excludesfile = /Users/hjrnunes/.gitignore
    # treat spaces before tabs, lines that are indented with 8 or more spaces, and all kinds of trailing whitespace as an error
    whitespace = space-before-tab, trailing-space
	editor = nano
	autocrlf = input

[color]
    ui = auto
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "diff"]
    meta = yellow
    frag = white
    old = red
    new = green
    plain = white dim
[color "status"]
    added = green
    changed = cyan
    untracked = red

[merge]
    # include summaries of merged commits in newly created merge commit messages
    log = true

# always use `origin` as the default remote on the `master` branch
[branch "master"]
    remote = origin
    merge = refs/heads/master

[remote "origin"]
    push = HEAD

[push]
    default = simple

# URL shorthands
[url "git@github.com:"]
    insteadOf = "gh:"
    pushInsteadOf = "github:"
    pushInsteadOf = "git://github.com/"
[url "git://github.com/"]
    insteadOf = "github:"
[url "git@gist.github.com:"]
    insteadOf = "gst:"
    pushInsteadOf = "gist:"
    pushInsteadOf = "git://gist.github.com/"
[url "git://gist.github.com/"]
    insteadOf = "gist:"

# personal details

[user]
	email = hjrnunes@gmail.com
	name = Henrique Nunes
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
